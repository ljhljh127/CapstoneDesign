# Create NameSpace
apiVersion: v1
kind: Namespace
metadata:
  name: cctv
---

apiVersion: v1
kind: Namespace
metadata:
  name: cctv-api
---

# cctv-api-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cctv-api-secret
  namespace: cctv-api
  annotations:
    kubernetes.io/service-account.name: cctv-api
type: kubernetes.io/service-account-token

---

# ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cctv-api
  namespace: cctv-api
secrets:
- name: cctv-api-secret

---

# CCTVManagerRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: cctv-api
  name: cctvManager

rules:
- apiGroups: ["","apps"] # 코어 API 그룹을 의미함,apps API그룹도 추가함
  resources: ["*"] # 모든 리소스에 대한 권한을 줌
  verbs: ["*"] # 모든 동작 가능하게(관리자이기떄문)

---

# CCTVMangerRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cctvClusterRoleBinding
  namespace: cctv-api
subjects:
- kind: ServiceAccount
  name: cctv-api
  namespace: cctv-api
roleRef:
 kind: ClusterRole
 name: cctvManager
 apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: cctv-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cctv-api
  template:
    metadata:
      labels:
        app: cctv-api
    spec:
      serviceAccountName: cctv-api  # cctv-api 서비스 어카운트 설정
      nodeSelector:
        kubernetes.io/hostname: leejeonghyeon 
      containers:
      - name: fastapi-container
        image: leejeonghyeon1127/fastapi:1.0
        ports:
        - containerPort: 8000
        - containerPort: 50051
        volumeMounts:
        - name: code-volume
          mountPath: /app
      volumes:
      - name: code-volume
        hostPath:
          path: /home/leejeonghyeon/바탕화면/CapstoneDesign/PythonRestAPI_V2   # Volume경로
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: cctv-api
spec:
  type: NodePort
  selector:
    app: cctv-api
  ports:
    - protocol: TCP
      name: http    
      port: 8000
      targetPort: 8000
      nodePort: 30080
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-service
  namespace: cctv-api
spec:
  type: ClusterIP
  selector:
    app: cctv-api
  ports:
    - protocol: TCP
      name: grpc
      port: 50051
      targetPort: 50051

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cctv-api-dns-reader-binding  # 적절한 이름 선택
  namespace: cctv  # ClusterRoleBinding이 적용될 네임스페이스 선택 (cctv)
subjects:
- kind: ServiceAccount
  name: cctv-api  # cctv-api 네임스페이스의 ServiceAccount 이름
  namespace: cctv  # ServiceAccount가 속한 네임스페이스 (cctv)
roleRef:
  kind: ClusterRole
  name: cctvManager  # cctv-api 네임스페이스의 ClusterRole 이름
  apiGroup: rbac.authorization.k8s.io
